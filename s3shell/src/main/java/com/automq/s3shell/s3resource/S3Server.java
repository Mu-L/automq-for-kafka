/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.automq.s3shell.s3resource;

import com.automq.s3shell.constant.ServerRoleType;
import lombok.Getter;

/**
 * This class represent how AutoMQ store kafka broker or controller server's metadata on s3.
 */
@Getter
public class S3Server implements S3Resource {
    
    private String clusterId;
    
    /**
     * Generated by AutoMQ, it is the unique id of the server.
     */
    private String serverId;
    
    private int nodeId;
    
    private ServerRoleType serverRoleType;
    
    /**
     * Admin tool use auto selected ip address to set advertised listeners if user not specify it.
     */
    private String autoSelectedListenerIpAddress;
    
    private String controllerQuorumVoters;
    
    private S3ResourceMetadata serverMetadata;
    
    public S3Server(String clusterId, String serverId, int nodeId, ServerRoleType serverRoleType,
                    String autoSelectedListenerIpAddress, String controllerQuorumVoters) {
        this.clusterId = clusterId;
        this.serverId = serverId;
        this.nodeId = nodeId;
        this.serverRoleType = serverRoleType;
        this.autoSelectedListenerIpAddress = autoSelectedListenerIpAddress;
        this.controllerQuorumVoters = controllerQuorumVoters;
        this.serverMetadata = new S3ServerMetadata(clusterId, serverId);
    }
    
    @Override
    public S3ResourceMetadata getMetadata() {
        return serverMetadata;
    }
    
    @Override
    public byte[] serialize() {
        return new byte[0];
    }
    
    @Override
    public S3Resource deserialize(byte[] bytes) {
        return null;
    }
}
